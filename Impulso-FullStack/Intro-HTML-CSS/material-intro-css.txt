CSS 3

Definição e seletores

- Após a criação do HTML a necessidade de formatar as páginas ficou evidente, assim, em 1996, foi criada a linguagem de estilo que conhecemos por CSS.
- A sintaxe é bem simples e pode ser explicada com a frase "você cria regras de estilo para elementos ou grupos de elementos".
- Uma regra CSS é representada por um seletor ou um grupo de seletores, no nosso caso é o <a>, então dentro de um par de chaves adicionamos as declarações, no exemplo acima estamos alterando cor e tamanho da fonte dessa âncora, as declarações são formadas por uma propriedade e um valor.
- Percebam que podemos colocar vários seletores em uma regra separando-os por vírgula.
- E há um último detalhe nesse exemplo: a pseudo-classe. Elementos HTML sofrem alterações causadas pela interação do usuário, como mover o mouse por cima ou clicar nesse elemento.
- O a:hover do exemplo significa que a âncora também terá essa aparência quando o usuário passar o mouse por cima de um hyperlink.


ID x Classe

No exemplo anterior criamos uma regra que altera um elemento HTML diretamente, mas isso significa que todos os elementos <a> ficarão com aquela aparência, e normalmente temos sites mais complexos que precisam de várias regras diferentes para elementos iguais.
Para ficar mais tangível vamos relembrar um pouco o site que começamos a fazer no módulo passado, ele tinha vários elementos header, mas não vamos querer que o header principal tenha a mesma formatação que o header de uma postagem, é aí que entram os IDs e Classes.

O seletor que vimos no primeiro exemplo é um seletor de tipo, pois ele representa um elemento HTML, e com IDs e Classes podemos representar qualquer tipo de elemento mas há algumas diferenças entre eles:
- ID: é representado pelo símbolo # (hash) seguido de um nome para esse ID.
- Classe: a classe é representada de forma parecida do ID, mas é precedida por um ponto em vez do hash.
E a diferença mais importante entre eles é a forma como devem ser usados: o ID só pode ser usado uma vez em uma página HTML enquanto a classe não tem restrições.

 
Box-model
Quando estamos criando o layout de um site o navegador representa cada elemento HTML  como uma caixa retangular, isso é o box-model. E com CSS nós alteramos a aparência dessa caixa (largura, altura, cor de fundo, etc.). Essa caixa é composta por 4 áreas: o conteúdo, o padding, a borda e a margem.

As margens (margin) são espaçamentos entre elementos;
As bordas (border) ;
O padding é um espaçamento entre as bordas e o conteúdo, a diferença para as margens é que declarações de imagem de fundo funcionam nele;
O conteúdo (content) é o que o seu bloco representa, um texto, uma imagem, um vídeo;


Estilizando elementos
Agora que entendemos o box-model podemos focar em deixar nosso site mais bonito, então vamos repassar pelas propriedades já citadas:


Padding e Margin
Anteriormente usamos o padding e o margin da forma mais básica, com apenas um valor, mas eles são mais poderosos que isso. Se quisermos atribuir tamanhos diferentes para cada lado do box nós podemos, e vamos ver três formas de fazer isso.

- A primeira é colocando um valor para as partes superior e inferior e depois para os lados esquerdo e direito.
O valor de 10 pixels se refere ao eixo Y, ou partes superior e inferior, e os 5 pixels se referem aos lados esquerdo e direito.

- A segunda forma é dando valores para cada lado do box.
Então começamos pelo topo com 15 pixels, passamos o lado direito com 10 pixels, depois para a parte inferior com 5 pixels e por último o lado esquerdo com 0, e sempre nessa ordem.
Uma boa dica também é que quando o valor for 0 não precisamos não precisamos colocar a unidade.

- A terceira forma é com as propriedades específicas para cada lado, até agora tínhamos visto atalhos para essas propriedades.
Essa opção é mais usada quando temos o mesmo valor para 3 lados, e o quarto precisa ter um valor diferente, então usamos o padding com apenas um valor e uma dessas opções para representar o lado diferente.


Background
A propriedade background também é um atalho para várias propriedades, mas isso vocês podem absorver aos poucos, e uma boa opção de leitura é a documentação do MDN.
Por enquanto veremos apenas como mudar a cor de fundo.
A primeira forma é pelo nome da cor em inglês, a segunda é pelo código hexadecimal e a terceira é usando apenas o atalho background.


Border
Vimos que a propriedade border pode ter 3 valores: a largura (width - em px), a cor (color - nome em inglês ou hexadecimal) e o estilo (style), mas existem algumas particularidades nisso.
A largura pode ser usada com várias unidades, como px, em e mm. A cor pode ser atribuída pelo nome ou por um código hexadecimal, assim como fizemos com o background, e o estilo é representada por palavras-chave, vamos ver algumas delas:

solid: mostra uma borda simples e reta;

dotted: são bolinhas com um pequeno espaçamento entre elas;

dashed: forma uma linha tracejada.

E se você não quiser usar a propriedade border existem as propriedade específicas para cada aspecto de uma borda, são elas border-width para a largura, border-color para a cor e border-style para o estilo.
E depois disso podemos juntar os lados com os aspectos de uma borda e criar uma regra mais específica ainda.

 
Ordem:
topo (top), direita (right), inferior (bottom), esquerda (left)
Se colocar só uma medida, vai ser aplicado a todos os lados. Ex: border: 3px solid blue;
Se colocar duas medidas, vai ser topo/inferior (eixo y), direita/esquerda (eixo x). Ex: border-radius: 10% 20%
Pode colocar especificando lados:  Ex: border-top: 2px dotted green;


Border-radius
E a última propriedade é o border-radius, ele permite arredondar os cantos de um elemento. Podemos usar várias unidades, mas as mais comuns são os pixels e a porcentagem.
Colocando apenas um valor mudamos todos os cantos do elemento, mas seguindo aquela mesma ordem que vimos no padding e margin - topo, direita, inferior e esquerda -  conseguimos alterar cada canto separadamente.

Se você tem um elemento quadrado, botando o radius em 50%, se torna um círculo

 
Estilizando textos

font-family
Com o font-family podemos alterar a fonte dos nossos textos, como uma fonte da internet ou uma que esteja instalada no nosso computador, mas vamos nos ater às fontes seguras, chamadas de web safe fonts.
Essas fontes são chamadas assim pois são encontradas em quases todos os sistemas e podem ser usadas sem preocupação. Podem ser passadas duas, a segunda como backup caso a primeira não funcione

font-size
O font-size nos ajuda a mudar o tamanho do texto, existem algumas unidades de medida para ele mas por enquanto os pixels são suficientes para nós.

font-style
Usamos o font-style para tornar um texto itálico, na maioria das vezes você usará apenas o valor italic para ele, mas se precisar tirar o itálico de um texto você pode usar o valor normal.

font-weight
Altera o peso do texto. Pode ser normal, bold (negrito)

text-transform
uppercase (todo o texto em caixa alta)
lowercase (todo o texto em caixa baixa)
capitalize (todas as primeiras letras de cada palavra em maiúsculo)

text-decoration: coloca linhas
underline (abaixo da palavra - sublinhado)
overline (acima da palavra)
line-through (através, ao centro)

Estilizando listas 

list-style-type: square (quadrado)
list-style-type: upper-roman (algarismo romano maiúsculo)
list-style-type: "\1F44D" (alterando para um símbolo - emoji de joinha)
list-style-image: url("rocket.png"); 
list-style-type: none; // remove marcadores

Dimensão e alinhamento
width: largura. pode ser em px ou %
height: altura
max width: largura máxima. pode se ajustar dependendo da situação
max height: altura máxima
margin: alinhar elemento automaticamente
text align: alinhar o texto ao centro (center), left (esquerda), right (direita), justificado (justify)
